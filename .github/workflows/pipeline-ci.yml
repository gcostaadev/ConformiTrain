# Nome do nosso workflow, que aparecerá no separador "Actions" do GitHub
name: CI - Build e Push da Imagem Docker

# Define o gatilho (trigger) para este workflow.
# Ele será executado a cada push na branch 'main'.
on:
  push:
    branches: [ "main" ]

# Define os trabalhos (jobs) que serão executados.
jobs:
  # O nosso único trabalho, por agora, é construir a imagem e publicá-la.
  build-and-push:
    # O tipo de máquina virtual que o nosso trabalho vai usar.
    runs-on: ubuntu-latest

    # Os passos que compõem o nosso trabalho.
    steps:
      # 1. Faz o checkout do código do repositório para a máquina virtual.
      - name: Checkout do código
        uses: actions/checkout@v4

      # 2. Configura o QEMU, necessário para construir imagens para múltiplas arquiteturas.
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # 3. Configura o Docker Buildx, uma extensão que nos dá mais funcionalidades de build.
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 4. Faz o login no Docker Hub usando os segredos que configurámos.
      - name: Login no Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 5. Constrói a imagem Docker a partir do nosso Dockerfile e envia-a (push) para o Docker Hub.
      - name: Build e push da imagem
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          # A tag da imagem será o seu username/nome-do-repositorio:latest
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/conformitrain-api:latest
