# Define a versão do docker-compose a ser usada
version: '3.8'

# Define os serviços (containers) que compõem nossa aplicação
services:
  # 1. Serviço da nossa API em C#
  conformitrain-api:
    container_name: conformitrain-api
    build:
      # Contexto é a pasta atual (.), onde este docker-compose.yml está.
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      # [CORREÇÃO] Alterado "User Id=app" para "User Id=SYSTEM"
      - "ConnectionStrings__DefaultConnection=User Id=SYSTEM;Password=${DB_PASSWORD};Data Source=db:1521/FREEPDB1;"
    depends_on:
      # A API só iniciará depois que o container do banco estiver saudável
      db:
        condition: service_healthy
    networks:
      - conformitrain-network

  # 2. Serviço do Banco de Dados Oracle
  db:
    container_name: conformitrain-db
    image: "gvenzl/oracle-free"
    ports:
      # Expõe a porta padrão do Oracle para a sua máquina
      - "1521:1521"
    environment:
      # Define a senha para os usuários do Oracle, usando o valor do .env
      - ORACLE_PASSWORD=${DB_PASSWORD}
    volumes:
      # Cria um volume para persistir os dados do banco Oracle
      - oracledata:/opt/oracle/oradata
    networks:
      - conformitrain-network
    # Verificação que garante que o banco está pronto para aceitar conexões
    healthcheck:
      test: ["CMD", "healthcheck.sh"]
      interval: 10s
      timeout: 5s
      retries: 10

  # 3. Serviço do Test Runner (BDD)
  test-runner:
    container_name: test-runner
    build:
      # Sobe um nível (../) para a raiz da Solução,
      # e depois entra na pasta de testes
      context: ../ConformiTrain.Tests.API
      dockerfile: Dockerfile
    environment:
      # URL interna da API para os testes, acessível pela rede do Docker
      - API_BASE_URL=http://conformitrain-api:8080
    depends_on:
      # Garante que a API e o DB estão prontos antes de rodar os testes
      conformitrain-api:
        condition: service_started
      db:
        condition: service_healthy
    networks:
      - conformitrain-network

# Define o volume de dados para o banco Oracle
volumes:
  oracledata:

# Define a rede para a comunicação entre os containers
networks:
  conformitrain-network:
    driver: bridge
